#!usr/bin/env/python3
# -*- coding: utf-8 -*-

txt = """Анализ текста по буквам. Практическое задание №2

Написать программу на Python для анализа данного текста, который сохранён в переменной txt по буквам. Программа на Python должна проанализировать данный текст и вывести, или, как некоторые Users говорят, напечатать следующую информацию. Необходимо вывести:

# Общее количество букв в данном тексте
# Общее количество слов в данном тексте. Словом, считаются любые символы, разделённые пробелами или переходом на следующую строку.
# Подсчитать, каких букв и сколько встречается в тексте
# Вывести их на печать
# 1) в алфавитном порядке
# 2) в порядке убывания частоты
# Регистр букв значения не имеет! Например, в тексте 'Aa' буква 'а'
# встречается 2 раза
# В структуре данных, которую вы выберете для хранения информации
# во время работы программы, НЕ ХРАНИТЬ буквы, которые не встретились"""

# ***********************************
# Тут должна находиться Ваша программа
# Функция считает количество знаков(букв)
def word_caclculate(spis_line):
    n_letters = 0
    for lin in spis_line:
        lin = lin.strip()
        n_letters += len(lin)
    return  n_letters

# Убираем лишние знаки которые не относятся к буквам
s1="".join(c for c in txt if c.isalpha())
# Применяем функцию для подчета количества букв
nl = word_caclculate(s1)
print(f'\nВ тексте txt - {nl} буквы')
# Считаем количество слов в тексте (самый простой сбособ)
print(f'\nВ тексте txt - {len(txt.split())} слов')
# Убираем влияние регистра заглавных букв
s1 = s1.lower()
# Создаем словарь для хранения букв
dsimbols = {}
# Анализируем буквы и ведем подсчет их с накопительным эффектом
for letter in s1:
    if letter in dsimbols:
        dsimbols[letter] += 1
    else:
        dsimbols[letter] = 1
# Создаем список из кортежей (буква, количество)
list_simbols1 = list(dsimbols.items())
# Сортируем список по кортежу (реально по первому элементу кортежа)
list_simbols1.sort()
# Используя генераторы списков создаем список из кортежей (количество, буква)
list_simbols2 = [(n,l) for l, n in dsimbols.items()]
# Сортируем список по первому элементу кортежа
list_simbols2.sort(reverse=True)

print('\nБуквы в тексте в алфавитном порядке:')
print('*' * 40)
# Идет разбор кортежа №1. Для формирования алфавитного порядка
for b, n in list_simbols1:
    print(f'Буква {b} встречается в тексте {n:3} раз.')

print('\nБуквы в порядке убывания частоты:')
print('*' * 40)
# Идет разбор кортежа №2. Символы n и b в обратном порядке для убывания использования букв!!!
for n, b in list_simbols2:
    print(f'Буква {b} встречается в тексте {n:3} раз.')

print('*' * 40)
# ***********************************
print('\nEND')
